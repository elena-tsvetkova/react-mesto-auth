{"ast":null,"code":"import _classCallCheck from\"/home/user/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/user/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._url=options.baseUrl;this._headers=options.headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status,\" \").concat(res.text().then(function(text){throw new Error(text);})));}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'GET',headers:this._headers}).then(this._checkResponse);}},{key:\"setUserInfoApi\",value:function setUserInfoApi(userData){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:userData.name,about:userData.about})}).then(this._checkResponse);}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._url,\"/cards\"),{method:'GET',headers:this._headers}).then(this._checkResponse);}},{key:\"addCard\",value:function addCard(data){return fetch(\"\".concat(this._url,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:data.name,link:data.link})}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(id){return fetch(\"\".concat(this._url,\"/cards/\").concat(id),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}},{key:\"like\",value:function like(id){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(id),{method:'PUT',headers:this._headers}).then(this._checkResponse);}},{key:\"dislike\",value:function dislike(id){return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(id),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}},{key:\"updateAvatar\",value:function updateAvatar(data){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:data.avatar})}).then(this._checkResponse);}},{key:\"getAllNeededData\",value:function getAllNeededData(){return Promise.all([this.getInitialCards(),this.getUserInfo()]);}}]);return Api;}();var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-42',headers:{authorization:'62c163bf-1af7-42e5-bc58-fbc19f858504','Content-Type':'application/json'}});export default api;","map":{"version":3,"names":["Api","options","_url","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","text","then","Error","fetch","method","_checkResponse","userData","body","JSON","stringify","name","about","data","link","id","avatar","all","getInitialCards","getUserInfo","api","authorization"],"sources":["/home/user/dev/mesto-react/src/utils/api.js"],"sourcesContent":[" class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json()\n    }\n    return Promise.reject(`Ошибка: ${res.status} ${res.text().then(text => { throw new Error(text) })}`)\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  setUserInfoApi(userData) { \n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userData.name,\n        about: userData.about\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  like(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  dislike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  updateAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n\n  getAllNeededData() {\n    return Promise.all([\n      this.getInitialCards(),\n       this.getUserInfo(),\n      ])\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-42',\n  headers: {\n    authorization: '62c163bf-1af7-42e5-bc58-fbc19f858504',\n    'Content-Type': 'application/json'\n  }\n}); \n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module"}