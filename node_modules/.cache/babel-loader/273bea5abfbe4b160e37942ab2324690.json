{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status} ${res.text().then(text => {\n      throw new Error(text);\n    })}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  setUserInfoApi(userData) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userData.name,\n        about: userData.about\n      })\n    }).then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  like(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  dislike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  updateAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._checkResponse);\n  }\n\n  getAllNeededData() {\n    return Promise.all([this.getInitialCards(), this.getUserInfo()]);\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-42',\n  headers: {\n    authorization: '62c163bf-1af7-42e5-bc58-fbc19f858504',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_url","baseUrl","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","text","then","Error","getUserInfo","fetch","method","setUserInfoApi","userData","body","JSON","stringify","name","about","getInitialCards","addCard","data","link","deleteCard","id","like","dislike","updateAvatar","avatar","getAllNeededData","all","api","authorization"],"sources":["/home/user/dev/mesto-react/src/utils/api.js"],"sourcesContent":[" class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json()\n    }\n    return Promise.reject(`Ошибка: ${res.status} ${res.text().then(text => { throw new Error(text) })}`)\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  setUserInfoApi(userData) { \n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userData.name,\n        about: userData.about\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  like(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  dislike(id) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  updateAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n\n  getAllNeededData() {\n    return Promise.all([\n      this.getInitialCards(),\n       this.getUserInfo(),\n      ])\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-42',\n  headers: {\n    authorization: '62c163bf-1af7-42e5-bc58-fbc19f858504',\n    'Content-Type': 'application/json'\n  }\n}); \n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module"}