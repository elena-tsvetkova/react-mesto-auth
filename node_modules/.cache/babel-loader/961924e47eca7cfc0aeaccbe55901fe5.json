{"ast":null,"code":"var _jsxFileName = \"/home/user/dev/mesto-react/src/components/ProtectedRoute.js\";\nimport React from 'react';\nimport { Route, Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: path,\n    exact: true,\n    children: isChecking ? /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content page__content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this) : loggedIn ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"./sign-in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 31\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Navigate","ProtectedRoute","children","path","isChecking","loggedIn"],"sources":["/home/user/dev/mesto-react/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Route, Navigate } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ children }) => {\n  return (\n    <Route path={path} exact>\n      { isChecking ? (\n        <main className={\"content page__content\"}></main>\n      ) : (\n        loggedIn ? children : <Navigate to=\"./sign-in\" />\n      )}\n    </Route>\n  )\n}\n\nexport default ProtectedRoute;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,MAAMC,cAAc,GAAG,QAAkB;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACvC,oBACE,QAAC,KAAD;IAAO,IAAI,EAAEC,IAAb;IAAmB,KAAK,MAAxB;IAAA,UACIC,UAAU,gBACV;MAAM,SAAS,EAAE;IAAjB;MAAA;MAAA;MAAA;IAAA,QADU,GAGVC,QAAQ,GAAGH,QAAH,gBAAc,QAAC,QAAD;MAAU,EAAE,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA;EAJ1B;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAVD;;KAAMD,c;AAYN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}