{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst responseCheck = response => response.ok ? response.json() : Promise.reject(`Ошибка ${response.status}`);\n\nexport const register = _ref => {\n  let {\n    password,\n    email\n  } = _ref;\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  }).then(responseCheck);\n};\nexport const authorize = _ref2 => {\n  let {\n    password,\n    email\n  } = _ref2;\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  }).then(responseCheck);\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(responseCheck);\n};","map":{"version":3,"names":["BASE_URL","responseCheck","response","ok","json","Promise","reject","status","register","password","email","fetch","method","headers","body","JSON","stringify","then","authorize","getContent","token"],"sources":["/home/user/dev/mesto-react/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst responseCheck = (response) => response.ok ? response.json() : Promise.reject(`Ошибка ${response.status}`);\n\nexport const register = ({password, email}) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            \"password\": password,\n            \"email\": email\n        })\n    })\n        .then(responseCheck)\n};\n\nexport const authorize = ({password, email}) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            \"password\": password,\n            \"email\": email\n        })\n    })\n        .then(responseCheck)\n};\n\nexport const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        }\n    })\n        .then(responseCheck)\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;;AAEP,MAAMC,aAAa,GAAIC,QAAD,IAAcA,QAAQ,CAACC,EAAT,GAAcD,QAAQ,CAACE,IAAT,EAAd,GAAgCC,OAAO,CAACC,MAAR,CAAgB,UAASJ,QAAQ,CAACK,MAAO,EAAzC,CAApE;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAuB;EAAA,IAAtB;IAACC,QAAD;IAAWC;EAAX,CAAsB;EAC3C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;IAC/BY,MAAM,EAAE,MADuB;IAE/BC,OAAO,EAAE;MACL,gBAAgB;IADX,CAFsB;IAK/BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACjB,YAAYP,QADK;MAEjB,SAASC;IAFQ,CAAf;EALyB,CAAvB,CAAL,CAUFO,IAVE,CAUGhB,aAVH,CAAP;AAWH,CAZM;AAcP,OAAO,MAAMiB,SAAS,GAAG,SAAuB;EAAA,IAAtB;IAACT,QAAD;IAAWC;EAAX,CAAsB;EAC5C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;IAC/BY,MAAM,EAAE,MADuB;IAE/BC,OAAO,EAAE;MACL,gBAAgB;IADX,CAFsB;IAK/BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACjB,YAAYP,QADK;MAEjB,SAASC;IAFQ,CAAf;EALyB,CAAvB,CAAL,CAUFO,IAVE,CAUGhB,aAVH,CAAP;AAWH,CAZM;AAcP,OAAO,MAAMkB,UAAU,GAAIC,KAAD,IAAW;EACjC,OAAOT,KAAK,CAAE,GAAEX,QAAS,WAAb,EAAyB;IACjCY,MAAM,EAAE,KADyB;IAEjCC,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,iBAAkB,UAASO,KAAM;IAF5B;EAFwB,CAAzB,CAAL,CAOFH,IAPE,CAOGhB,aAPH,CAAP;AAQH,CATM"},"metadata":{},"sourceType":"module"}